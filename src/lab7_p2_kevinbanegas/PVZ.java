/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab7_p2_kevinbanegas;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Usuario
 */
public class PVZ extends javax.swing.JFrame {

    /**
     * Creates new form PVZ
     */
    public PVZ() throws IOException {
        initComponents();
        cargarFilePlantas();
        cargarFileZombies();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        Eliminar = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jPanel5 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jScrollPane3 = new javax.swing.JScrollPane();
        batallas_pvz = new javax.swing.JTextArea();
        plantaEscogida = new javax.swing.JLabel();
        zombieEscogido = new javax.swing.JLabel();
        testear = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        añosExp_zombies = new javax.swing.JSpinner();
        vida_zombies = new javax.swing.JSpinner();
        ataque_zombies = new javax.swing.JSpinner();
        tamaño_zombies = new javax.swing.JSpinner();
        edad_zombies = new javax.swing.JSpinner();
        nombre_zombies = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        enojo_zombies = new javax.swing.JSpinner();
        jLabel20 = new javax.swing.JLabel();
        comida_zombies = new javax.swing.JTextField();
        agregarPersona_zombies = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        personasComidas_zombies = new javax.swing.JList<>();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        colorBandera_zombies = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        clasico_zombies = new javax.swing.JRadioButton();
        cargado_zombies = new javax.swing.JRadioButton();
        dirBandera_zombies = new javax.swing.JTextField();
        crear_zombies = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        button_crearPlanta = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        rango_bajo = new javax.swing.JRadioButton();
        rango_medio = new javax.swing.JRadioButton();
        rango_alto = new javax.swing.JRadioButton();
        tipo_explo = new javax.swing.JRadioButton();
        tipo_disparo = new javax.swing.JRadioButton();
        Tipo_defensa = new javax.swing.JRadioButton();
        nombre_planta = new javax.swing.JTextField();
        vida_planta = new javax.swing.JSpinner();
        ataque_planta = new javax.swing.JSpinner();
        magnExp_planta = new javax.swing.JSpinner();
        altura_planta = new javax.swing.JSpinner();
        peso_planta = new javax.swing.JSpinner();
        dureza_planta = new javax.swing.JSpinner();
        proyectil_planta = new javax.swing.JTextField();
        color_planta = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Eliminar);

        jMenuItem2.setText("Imprimir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);

        jMenuItem3.setText("Elegir");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel5.setBackground(new java.awt.Color(153, 204, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Entidades");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Plantas");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Defensa");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Disparo");
        javax.swing.tree.DefaultMutableTreeNode treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Bajo");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Medio");
        treeNode3.add(treeNode4);
        treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("Alto");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Explosiva");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Zombies");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Clasico");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Cargado");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.setComponentPopupMenu(jPopupMenu1);
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        batallas_pvz.setColumns(20);
        batallas_pvz.setRows(5);
        jScrollPane3.setViewportView(batallas_pvz);

        plantaEscogida.setText("-");

        zombieEscogido.setText("-");

        testear.setText("Testear");
        testear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(zombieEscogido, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                            .addComponent(plantaEscogida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(testear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(plantaEscogida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(zombieEscogido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(testear)
                        .addGap(36, 36, 36))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Test", jPanel1);

        jLabel13.setText("Nombre");

        jLabel14.setText("Ataque");

        jLabel15.setText("Vida");

        jLabel16.setText("Edad");

        jLabel17.setText("Tamaño");

        jLabel18.setText("Años de Experiencia");

        jLabel19.setText("Enojo");

        jLabel20.setText("Agregar Persona Comida");

        agregarPersona_zombies.setText("+");
        agregarPersona_zombies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarPersona_zombiesActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(personasComidas_zombies);

        jLabel21.setText("Tipo");

        jLabel22.setText("Color Bandera");

        jLabel23.setText("Direccion Bandera");

        clasico_zombies.setText("Clasico");

        cargado_zombies.setText("Cargado");

        crear_zombies.setText("Crear");
        crear_zombies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_zombiesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel13)
                        .addComponent(jLabel14)
                        .addComponent(jLabel15)
                        .addComponent(ataque_zombies)
                        .addComponent(vida_zombies)
                        .addComponent(nombre_zombies, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel21)
                    .addComponent(clasico_zombies)
                    .addComponent(cargado_zombies)
                    .addComponent(crear_zombies, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel22)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16)
                    .addComponent(tamaño_zombies)
                    .addComponent(añosExp_zombies)
                    .addComponent(edad_zombies)
                    .addComponent(colorBandera_zombies)
                    .addComponent(jLabel23)
                    .addComponent(dirBandera_zombies, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel19)
                    .addComponent(enojo_zombies, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(comida_zombies, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(agregarPersona_zombies))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(4, 4, 4)
                        .addComponent(nombre_zombies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14)
                        .addGap(5, 5, 5)
                        .addComponent(ataque_zombies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vida_zombies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clasico_zombies)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cargado_zombies)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(crear_zombies, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(4, 4, 4)
                        .addComponent(enojo_zombies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comida_zombies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(agregarPersona_zombies, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(4, 4, 4)
                        .addComponent(edad_zombies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addGap(5, 5, 5)
                        .addComponent(tamaño_zombies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(añosExp_zombies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(colorBandera_zombies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dirBandera_zombies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Zombies", jPanel3);

        jLabel2.setText("Rango");

        jLabel3.setText("Tipo");

        jLabel4.setText("Nombre");

        jLabel5.setText("Ataque");

        jLabel6.setText("Vida");

        button_crearPlanta.setText("Crear");
        button_crearPlanta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_crearPlantaActionPerformed(evt);
            }
        });

        jLabel7.setText("Magnitud de Explosion");

        jLabel8.setText("Altura");

        jLabel9.setText("Nombre Proyectil");

        jLabel10.setText("Peso");

        jLabel11.setText("Color");

        jLabel12.setText("Dureza");

        rango_bajo.setText("Bajo");

        rango_medio.setText("Medio");

        rango_alto.setText("Alto");

        tipo_explo.setText("Explosiva");

        tipo_disparo.setText("Disparo");

        Tipo_defensa.setText("Defensa");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rango_bajo)
                            .addComponent(jLabel2)
                            .addComponent(rango_medio)
                            .addComponent(rango_alto))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Tipo_defensa)
                            .addComponent(tipo_disparo)
                            .addComponent(jLabel3)
                            .addComponent(tipo_explo))
                        .addGap(78, 78, 78)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel6)
                                .addComponent(nombre_planta)
                                .addComponent(vida_planta, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel4))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(ataque_planta, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button_crearPlanta, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(altura_planta, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(magnExp_planta, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(peso_planta)
                            .addComponent(proyectil_planta, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(72, 72, 72)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(dureza_planta, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11)
                                .addComponent(color_planta, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nombre_planta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ataque_planta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(rango_bajo, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(tipo_explo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(button_crearPlanta, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                        .addGap(39, 39, 39))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rango_medio)
                                .addComponent(tipo_disparo))
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(vida_planta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Tipo_defensa)
                                    .addComponent(rango_alto))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(magnExp_planta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proyectil_planta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(color_planta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(altura_planta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(peso_planta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dureza_planta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53))
        );

        jTabbedPane1.addTab("Plantas", jPanel2);

        jPanel5.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 630, 400));

        jLabel1.setFont(new java.awt.Font("Litera-Serial", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Plantas vs Zombies");
        jPanel5.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void crear_zombiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crear_zombiesActionPerformed
        if (cargado_zombies.isSelected()) {
            Cargado z = new Cargado();
            z.setAtaque(Integer.parseInt(ataque_zombies.getValue().toString()));
            z.setEdad(Integer.parseInt(edad_zombies.getValue().toString()));
            z.setNiveEnojo(Integer.parseInt(enojo_zombies.getValue().toString()));
            z.setNombre(nombre_zombies.getText());
            z.setTamaño(Integer.parseInt(tamaño_zombies.getValue().toString()));
            z.setVida(Integer.parseInt(vida_zombies.getValue().toString()));
            z.setPersonas(personas);
            zombies.add(z);
            arbolesZombies(z);
        } else if (clasico_zombies.isSelected()) {
            Clasico z = new Clasico();
            z.setAtaque(Integer.parseInt(ataque_zombies.getValue().toString()));
            z.setNombre(nombre_zombies.getText());
            z.setVida(Integer.parseInt(vida_zombies.getValue().toString()));
            z.setAñosExp(Integer.parseInt(añosExp_zombies.getValue().toString()));
            z.setBandera(new Bandera(colorBandera_zombies.getText(), dirBandera_zombies.getText()));
            zombies.add(z);
            arbolesZombies(z);
        }
        if(cent == 0){
        cargarFileZombies();
        }
        cent =1 ;
    }//GEN-LAST:event_crear_zombiesActionPerformed

    private void button_crearPlantaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_crearPlantaActionPerformed
        String rango = "";
        if (rango_bajo.isSelected()) {
            rango = rango_bajo.getText();
        } else if (rango_alto.isSelected()) {
            rango = rango_alto.getText();
        } else if (rango_medio.isSelected()) {
            rango = rango_alto.getText();
        }

        if (tipo_explo.isSelected()) {
            Explosiva e = new Explosiva();
            e.setNombre(nombre_planta.getText());
            e.setMagnitud(Integer.parseInt(magnExp_planta.getValue().toString()));
            e.setNombre(nombre_planta.getText());
            e.setRango(rango);
            e.setVida(Integer.parseInt(vida_planta.getValue().toString()));
            plantas.add(e);
            plantas.add(e);
            arbolesPlantas(e);
        } else if (Tipo_defensa.isSelected()) {
            Defensa d = new Defensa();
            d.setNombre(nombre_planta.getText());
            d.setNombre(nombre_planta.getText());
            d.setRango(rango);
            d.setVida(Integer.parseInt(vida_planta.getValue().toString()));
            d.setAltura(Integer.parseInt(altura_planta.getValue().toString()));
            d.setAtaque(Integer.parseInt(ataque_planta.getValue().toString()));
            d.setNivDureza(Integer.parseInt(dureza_planta.getValue().toString()));
            plantas.add(d);
            plantas1.add(d);
            arbolesPlantas(d);
        } else if (tipo_disparo.isSelected()) {
            Disparo dis = new Disparo();
            dis.setNombre(nombre_planta.getText());
            dis.setNombre(nombre_planta.getText());
            dis.setRango(rango);
            dis.setVida(Integer.parseInt(vida_planta.getValue().toString()));
            dis.setAtaque(Integer.parseInt(ataque_planta.getValue().toString()));
            dis.setColor(color_planta.getText());
            dis.setNomProj(proyectil_planta.getText());
            plantas.add(dis);
            plantas1.add(dis);
            arbolesPlantas(dis);
        }
        if(cent1 == 0){
        cargarFilePlantas();
        }
        cent1 =1 ;
        try {
            escribirFilePlantas();
        } catch (IOException ex) {
            Logger.getLogger(PVZ.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_button_crearPlantaActionPerformed

    private void agregarPersona_zombiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarPersona_zombiesActionPerformed
        personas.add(comida_zombies.getText());
    }//GEN-LAST:event_agregarPersona_zombiesActionPerformed

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        if(evt.isMetaDown()){
            jPopupMenu1.setVisible(true);
            
        }
    }//GEN-LAST:event_jTree1MouseClicked

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EliminarActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.out.println(jTree1.getSelectionPath().getLastPathComponent());
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        if(jTree1.getSelectionPath().getLastPathComponent() instanceof Plantas){
            plantaEscogida.setText(((Plantas)(jTree1.getSelectionPath().getLastPathComponent())).getNombre());
        }else if(jTree1.getSelectionPath().getLastPathComponent() instanceof Zombies){
            zombieEscogido.setText(((Zombies)(jTree1.getSelectionPath().getLastPathComponent())).getNombre());
        }
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void testearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testearActionPerformed
        if(plantas1.get(0).getAtaque() > zombies1.get(0).getAtaque()){
            batallas_pvz.append("El zombie"+zombies1.get(0).getNombre()+"  tiene "+zombies1.get(0).getAtaque()+" de ataque y la Planta "+plantas1.get(0).getNombre()+" tiene "+plantas1.get(0).getAtaque()+" de ataque: GANA PLANTA");
        } else if(plantas1.get(0).getAtaque() < zombies1.get(0).getAtaque()){
            batallas_pvz.append("El zombie"+zombies1.get(0).getNombre()+"  tiene "+zombies1.get(0).getAtaque()+" de ataque y la Planta "+plantas1.get(0).getNombre()+" tiene "+plantas1.get(0).getAtaque()+" de ataque: GANA ZOMBIE");
        } else{
            batallas_pvz.append("El zombie"+zombies1.get(0).getNombre()+"  tiene "+zombies1.get(0).getAtaque()+" de ataque y la Planta "+plantas1.get(0).getNombre()+" tiene "+plantas1.get(0).getAtaque()+" de ataque: EMPATE");
        }
    }//GEN-LAST:event_testearActionPerformed
    public void cargarFilePlantas() {
        Scanner sc = null;
        plantas = new ArrayList();
        filePlantas = new File("./Plantas.txt");
        try {
            sc = new Scanner(filePlantas);
            String temp = sc.nextLine();
            String[] plantas_array = temp.split("\\|");
            for (int i = 0; i < plantas_array.length; i++) {
                if (plantas_array[i].contains("Disparo:")) {
                    Disparo d = new Disparo();
                    String tempAtDisparo = plantas_array[i].substring(plantas_array[i].indexOf("(") + 1, plantas_array[i].indexOf(")"));
                    String[] atDisparo = tempAtDisparo.split(";");
                    String[] atributos = plantas_array[i].split("_");
                    for (int j = 0; j < atributos.length; j++) {
                        if (atributos[j].contains("Nombre=")) {
                            for (int k = 0; k < atDisparo.length; k++) {
                                String[] disparoAtributos = atDisparo[k].split("=");
                                if ("Proyectil".equals(disparoAtributos[0])) {
                                    d.setNomProj(disparoAtributos[1]);
                                } else {
                                    d.setColor(disparoAtributos[1]);
                                }
                            }
                            String[] atIndividuales = atributos[j].split(",");
                            for (int k = 0; k < atIndividuales.length; k++) {
                                String[] indivVariables = atIndividuales[k].split("=");
                                if ("Nombre".equals(indivVariables[0])) {
                                    d.setNombre(indivVariables[1]);
                                } else if ("Vida".equals(indivVariables[0])) {
                                    d.setVida(Double.parseDouble(indivVariables[1]));
                                } else if ("Rango".equals(indivVariables[0])) {
                                    d.setRango(indivVariables[1]);
                                } else if ("Ataque".equals(indivVariables[0])) {
                                    d.setAtaque(Double.parseDouble(indivVariables[1]));
                                }
                            }
                        }
                    }
                    plantas.add(d);
                    plantas.add(d);
                    arbolesPlantas(d);
                } else if (plantas_array[i].contains("Explosiva:")) {
                    Explosiva e = new Explosiva();
                    String tempAtExplosiva = plantas_array[i].substring(plantas_array[i].indexOf("(") + 1, plantas_array[i].indexOf(")"));
                    String[] atExplosiva = tempAtExplosiva.split(";");
                    String[] atributos = plantas_array[i].split("_");
                    for (int j = 0; j < atributos.length; j++) {
                        if (atributos[j].contains("Nombre=")) {
                            String[] ExploAtributos = atExplosiva[0].split("=");
                            e.setMagnitud(Integer.parseInt(ExploAtributos[1]));
                            String[] atIndividuales = atributos[j].split(",");
                            for (int k = 0; k < atIndividuales.length; k++) {
                                String[] indivVariables = atIndividuales[k].split("=");
                                if ("Nombre".equals(indivVariables[0])) {
                                    e.setNombre(indivVariables[1]);
                                } else if ("Vida".equals(indivVariables[0])) {
                                    e.setVida(Double.parseDouble(indivVariables[1]));
                                } else if ("Rango".equals(indivVariables[0])) {
                                    e.setRango(indivVariables[1]);
                                } else if ("Ataque".equals(indivVariables[0])) {
                                    e.setAtaque(Double.parseDouble(indivVariables[1]));
                                }
                            }
                        }
                    }
                    plantas.add(e);
                    plantas1.add(e);
                    arbolesPlantas(e);
                    
                } else if (plantas_array[i].contains("Defensa:")) {
                    Defensa def = new Defensa();
                    String tempAtDef = plantas_array[i].substring(plantas_array[i].indexOf("(") + 1, plantas_array[i].indexOf(")"));
                    String[] atExplosiva = tempAtDef.split(";");
                    String[] atributos = plantas_array[i].split("_");
                    for (int j = 0; j < atributos.length; j++) {
                        if (atributos[j].contains("Nombre=")) {
                            for (int k = 0; k < atExplosiva.length; k++) {
                                String[] defAtributos = atExplosiva[k].split("=");
                                if ("Peso".equals(defAtributos[0])) {
                                    def.setPeso(Integer.parseInt(defAtributos[1]));
                                } else if ("Altura".equals(defAtributos[0])) {
                                    def.setAltura(Integer.parseInt(defAtributos[1]));
                                } else if ("Dureza".equals(defAtributos[0])) {
                                    def.setNivDureza(Integer.parseInt(defAtributos[1]));
                                }
                            }
                            String[] atIndividuales = atributos[j].split(",");
                            for (int k = 0; k < atIndividuales.length; k++) {
                                String[] indivVariables = atIndividuales[k].split("=");
                                if ("Nombre".equals(indivVariables[0])) {
                                    def.setNombre(indivVariables[1]);
                                } else if ("Vida".equals(indivVariables[0])) {
                                    def.setVida(Double.parseDouble(indivVariables[1]));
                                } else if ("Rango".equals(indivVariables[0])) {
                                    def.setRango(indivVariables[1]);
                                } else if ("Ataque".equals(indivVariables[0])) {
                                    def.setAtaque(Double.parseDouble(indivVariables[1]));
                                }
                            }
                        }
                    }
                    plantas.add(def);
                    plantas1.add(def);
                    arbolesPlantas(def);
                }
            }
            System.out.println(plantas);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void cargarFileZombies() {
        Scanner sc = null;
        zombies = new ArrayList();
        fileZombies = new File("./Zombies__.txt");
        try {
            sc = new Scanner(fileZombies);
            String temp = sc.nextLine();
            String[] zombies_array = temp.split("\\|");
            for (int i = 0; i < zombies_array.length; i++) {
                if (zombies_array[i].contains("Clasico:")) {
                    Clasico c = new Clasico();
                    String tempAtClasico = zombies_array[i].substring(zombies_array[i].indexOf("(") + 1, zombies_array[i].indexOf(")"));
                    String[] atClasico = tempAtClasico.split(";");
                    String[] atributos = zombies_array[i].split("_");
                    for (int j = 0; j < atributos.length; j++) {
                        if (atributos[j].contains("Nombre=")) {
                            for (int k = 0; k < atClasico.length; k++) {
                                String[] atAtributos = atClasico[k].split(";");
                                for (int l = 0; l < atAtributos.length; l++) {
                                    if (atAtributos[l].contains("Experiencia")) {
                                        String[] algo = atAtributos[l].split("=");
                                        c.setAñosExp(Integer.parseInt(algo[1]));
                                    } else {
                                        String tempAtBandera = atAtributos[l].substring(atAtributos[l].indexOf("[") + 1, atAtributos[l].indexOf("]"));
                                        String[] atBandera = tempAtBandera.split(",");
                                        Bandera b = new Bandera();
                                        for (int m = 0; m < atBandera.length; m++) {
                                            String[] cososBandera = atBandera[m].split(":");
                                            if ("Color".equals(cososBandera[0])) {
                                                b.setColor(cososBandera[1]);
                                            } else {
                                                b.setDirImagen(cososBandera[1]);
                                            }
                                        }
                                        c.setBandera(b);
                                        
                                    }
                                }
                            }
                            String[] atIndividuales = atributos[j].split(",");
                            for (int k = 0; k < atIndividuales.length; k++) {
                                String[] indivVariables = atIndividuales[k].split("=");
                                if ("Nombre".equals(indivVariables[0])) {
                                    c.setNombre(indivVariables[1]);
                                } else if ("Vida".equals(indivVariables[0])) {
                                    c.setVida(Double.parseDouble(indivVariables[1]));
                                } else if ("Ataque".equals(indivVariables[0])) {
                                    c.setAtaque(Double.parseDouble(indivVariables[1]));
                                }
                            }
                        }
                    }
                    zombies.add(c);
                    zombies1.add(c);
                    arbolesZombies(c);
                } else {
                    Cargado ca = new Cargado();
                    String tempAtCargado = zombies_array[i].substring(zombies_array[i].indexOf("(") + 1, zombies_array[i].indexOf(")"));
                    String[] atCargado = tempAtCargado.split(";");
                    String[] atributos = zombies_array[i].split("_");
                    for (int j = 0; j < atributos.length; j++) {
                        if (atributos[j].contains("Nombre=")) {
                            for (int k = 0; k < atCargado.length; k++) {
                                String[] atAtributos = atCargado[k].split(";");
                                for (int l = 0; l < atAtributos.length; l++) {
                                    String[] algo = atAtributos[l].split("=");
                                    if ("Enojo".equals(algo[0])) {
                                        ca.setNiveEnojo(Integer.parseInt(algo[1]));
                                    } else if ("Edad".equals(algo[0])) {
                                        ca.setEdad(Integer.parseInt(algo[1]));
                                    } else if ("Tamano".equals(algo[0])) {
                                        ca.setTamaño(Integer.parseInt(algo[1]));
                                    } else if ("Comidos".equals(algo[0])) {
                                        String temp1 = algo[1].substring(algo[1].indexOf("{") + 1, algo[1].indexOf("}"));
                                        String[] comidos = temp1.split(",");
                                        ArrayList<String> eaten = new ArrayList();
                                        for (int m = 0; m < comidos.length; m++) {
                                            eaten.add(comidos[m]);
                                        }
                                        ca.setPersonas(eaten);
                                    }
                                }
                                String[] atIndividuales = atributos[j].split(",");
                                for (int m = 0; m < atIndividuales.length; m++) {
                                    String[] indivVariables = atIndividuales[m].split("=");
                                    if ("Nombre".equals(indivVariables[0])) {
                                        ca.setNombre(indivVariables[1]);
                                    } else if ("Vida".equals(indivVariables[0])) {
                                        ca.setVida(Double.parseDouble(indivVariables[1]));
                                    } else if ("Ataque".equals(indivVariables[0])) {
                                        ca.setAtaque(Double.parseDouble(indivVariables[1]));
                                    }
                                }
                            }
                        }
                        zombies.add(ca);
                        zombies1.add(ca);
                        arbolesZombies(ca);
                    }
                }
            }
            System.out.println(zombies);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void escribirFileZombies() throws IOException {
        FileWriter fw = null;
        BufferedWriter bw = null;
        try {
            fw = new FileWriter(fileZombies, true);
            bw = new BufferedWriter(fw);
            bw.write(oneZombie);
            bw.flush();
        } catch (Exception ex) {
            System.out.println("nooo");
        }
        bw.close();
        fw.close();
    }

    public void escribirFilePlantas() throws IOException {
        FileWriter fw = null;
        BufferedWriter bw = null;
        try {
            fw = new FileWriter(filePlantas, true);
            bw = new BufferedWriter(fw);
            for (ArrayList<String> AS : shufflePlantas) {
                System.out.println(AS.toString());
                //bw.write(AS.toString());
            }
            bw.flush();
        } catch (Exception ex) {
            System.out.println("nooo");
        }
        bw.close();
        fw.close();
    }

    public void shufflePlantas() {
        cargarFilePlantas();
        ArrayList<String> onePlant = new ArrayList();
        shufflePlantas = new ArrayList();
        for (Plantas planta : plantas) {
            onePlant.add("Nombre" + planta.getNombre());
            onePlant.add("Ataque=" + planta.getAtaque());
            onePlant.add("Vida=" + planta.getVida());
            onePlant.add("Rango=" + planta.getRango());
            if (planta instanceof Disparo) {
                onePlant.add("Proyectil=" + ((Disparo) planta).getNomProj());
                onePlant.add("Color=" + ((Disparo) planta).getColor());
            } else if (planta instanceof Defensa) {
                onePlant.add("Peso=" + ((Defensa) planta).getPeso());
                onePlant.add("Altura=" + ((Defensa) planta).getAltura());
                onePlant.add("Dureza=" + ((Defensa) planta).getNivDureza());
            } else if (planta instanceof Explosiva) {
                onePlant.add("Magnitud=" + ((Explosiva) planta).getMagnitud());
            }
            Collections.shuffle(onePlant);
            shufflePlantas.add(onePlant);
        }
        Collections.shuffle(shufflePlantas);
    }

    public void shuffleZombies() {
        cargarFileZombies();
        oneZombie = "";
        for (Zombies zomby : zombies) {
            if (zomby instanceof Clasico) {
                oneZombie += "Clasico:(Bandera=[Color:" + ((Clasico) zomby).getBandera().getColor() + ",Direccion:" + ((Clasico) zomby).getBandera().getDirImagen() + "];Experiencia=" + ((Clasico) zomby).getAñosExp() + ")_Ataque=" + zomby.getAtaque() + ",Vida=" + zomby.getVida() + ",Nombre=" + zomby.getNombre() + "|";
            } else if (zomby instanceof Cargado) {
                String personas1 = "";
                for (int i = 0; i < ((Cargado) (zomby)).getPersonas().size(); i++) {
                    personas1 += ((Cargado) (zomby)).getPersonas().get(i);
                }
                oneZombie += "Vida=" + zomby.getVida() + ",Ataque=" + zomby.getAtaque() + ",Nombre=" + zomby.getNombre() + "_Cargado:(Enojo=" + ((Cargado) zomby).getNiveEnojo() + ";Edad=" + ((Cargado) zomby).getEdad() + ";Comidos={" + personas1 + "};Tamano=" + ((Cargado) zomby).getTamaño() + ")|";
            }
        }

    }

    public void arbolesPlantas(Plantas p) {
        DefaultTreeModel m = (DefaultTreeModel)jTree1.getModel();
        DefaultMutableTreeNode r = (DefaultMutableTreeNode) m.getRoot();
        DefaultMutableTreeNode n = new DefaultMutableTreeNode(p.getNombre());
        if(tipo_explo.isSelected()){
            ((DefaultMutableTreeNode)(r.getChildAt(0)).getChildAt(2)).add(n);
        }else if(tipo_disparo.isSelected()){
            if(rango_alto.isSelected()){
                ((DefaultMutableTreeNode)(r.getChildAt(0)).getChildAt(1).getChildAt(2)).add(n);
            }else if(rango_bajo.isSelected()){
                ((DefaultMutableTreeNode)(r.getChildAt(0)).getChildAt(1).getChildAt(0)).add(n);
            }else if(rango_medio.isSelected()){
                ((DefaultMutableTreeNode)(r.getChildAt(0)).getChildAt(1).getChildAt(1)).add(n);
            }
            
        }else if(Tipo_defensa.isSelected()){
            ((DefaultMutableTreeNode)(r.getChildAt(0)).getChildAt(0)).add(n);
        }
        m.reload();
    }
    
    public void arbolesZombies(Zombies z){
        DefaultTreeModel m = (DefaultTreeModel)jTree1.getModel();
        DefaultMutableTreeNode r = (DefaultMutableTreeNode) m.getRoot();
        DefaultMutableTreeNode n = new DefaultMutableTreeNode(z.getNombre());
        if(clasico_zombies.isSelected()){
            ((DefaultMutableTreeNode)(r.getChildAt(1)).getChildAt(0)).add(n);
        
        }else if(cargado_zombies.isSelected()){
            ((DefaultMutableTreeNode)(r.getChildAt(1)).getChildAt(2)).add(n);
        }
        m.reload();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PVZ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PVZ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PVZ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PVZ.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PVZ().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(PVZ.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    private ArrayList<Zombies> zombies = new ArrayList();
    private ArrayList<Plantas> plantas = new ArrayList();
    private ArrayList<Zombies> zombies1 = new ArrayList();
    private ArrayList<Plantas> plantas1 = new ArrayList();
    private ArrayList<ArrayList<String>> shufflePlantas = new ArrayList();
    private ArrayList<String> personas = new ArrayList();
    private int cent = 0;
    private int cent1 = 0;
    private String oneZombie;
    private File filePlantas = null;
    private File fileZombies = null;
    //private BufferedReader = 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Eliminar;
    private javax.swing.JRadioButton Tipo_defensa;
    private javax.swing.JButton agregarPersona_zombies;
    private javax.swing.JSpinner altura_planta;
    private javax.swing.JSpinner ataque_planta;
    private javax.swing.JSpinner ataque_zombies;
    private javax.swing.JSpinner añosExp_zombies;
    private javax.swing.JTextArea batallas_pvz;
    private javax.swing.JButton button_crearPlanta;
    private javax.swing.JRadioButton cargado_zombies;
    private javax.swing.JRadioButton clasico_zombies;
    private javax.swing.JTextField colorBandera_zombies;
    private javax.swing.JTextField color_planta;
    private javax.swing.JTextField comida_zombies;
    private javax.swing.JButton crear_zombies;
    private javax.swing.JTextField dirBandera_zombies;
    private javax.swing.JSpinner dureza_planta;
    private javax.swing.JSpinner edad_zombies;
    private javax.swing.JSpinner enojo_zombies;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTree jTree1;
    private javax.swing.JSpinner magnExp_planta;
    private javax.swing.JTextField nombre_planta;
    private javax.swing.JTextField nombre_zombies;
    private javax.swing.JList<String> personasComidas_zombies;
    private javax.swing.JSpinner peso_planta;
    private javax.swing.JLabel plantaEscogida;
    private javax.swing.JTextField proyectil_planta;
    private javax.swing.JRadioButton rango_alto;
    private javax.swing.JRadioButton rango_bajo;
    private javax.swing.JRadioButton rango_medio;
    private javax.swing.JSpinner tamaño_zombies;
    private javax.swing.JButton testear;
    private javax.swing.JRadioButton tipo_disparo;
    private javax.swing.JRadioButton tipo_explo;
    private javax.swing.JSpinner vida_planta;
    private javax.swing.JSpinner vida_zombies;
    private javax.swing.JLabel zombieEscogido;
    // End of variables declaration//GEN-END:variables
}
